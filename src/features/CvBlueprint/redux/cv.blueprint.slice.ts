import { CvSize } from "./../cv.blueprint.types";
import { createAsyncThunk, createSlice, PayloadAction } from "@reduxjs/toolkit";
import { RootState, AppThunk } from "../../../app/store";

export interface CvBlueprintState {
  size: {
    w: number;
    h: number;
  };
}

const initialState: CvBlueprintState = {
  size: CvSize.A4,
};

export const cvBlueprintSlice = createSlice({
  name: "cvBlueprint",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    setSize: (state, action: PayloadAction<keyof typeof CvSize>) => {
      state.size = CvSize[action.payload];
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {},
});

export const { setSize } = cvBlueprintSlice.actions;

export const getPaperSize = (state: RootState) => state.cvBlueprint.size;

export default cvBlueprintSlice.reducer;
